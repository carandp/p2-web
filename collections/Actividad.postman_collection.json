{
	"info": {
		"_postman_id": "df61d696-ce64-4903-907b-90bf3baf98b1",
		"name": "Actividad",
		"description": "## [POST Add actividad](https://go.postman.co/workspace/1283b32f-ca24-48d7-bcc0-3404d4b0e143/documentation/32528594-df61d696-ce64-4903-907b-90bf3baf98b1?entity=request-debd7d8f-9f68-45e6-a223-0edbb9128abc)\n\n**Petición:** `http://localhost:3001/api/v1/actividades`\n\n``` json\n{\n    \"titulo\": \"Maratones de programación\",\n    \"fecha\": \"28-10-2024\",\n    \"cupoMaximo\": 5,\n    \"estado\": 0\n}\n\n ```\n\n**Respuesta:**\n\nCódigo: 201\n\n``` json\n{\n    \"id\": \"1\",\n    \"titulo\": \"Maratones de programación\",\n    \"fecha\": \"28-10-2024\",\n    \"cupoMaximo\": 5,\n    \"estado\": 0\n}\n\n ```\n\n## [GET Get actividades - fecha](https://go.postman.co/workspace/1283b32f-ca24-48d7-bcc0-3404d4b0e143/documentation/32528594-df61d696-ce64-4903-907b-90bf3baf98b1?entity=request-342f1d4c-c4fd-4bb5-960b-2aa83d43e887)\n\n**Petición:** `http://localhost:3001/api/v1/actividades/by_fecha/28-10-2024`\n\n**Respuesta:**\n\nCódigo: 200\n\n``` json\n[\n    {\n        \"id\": \"1\",\n        \"titulo\": \"Maratones de programación\",\n        \"fecha\": \"28-10-2024\",\n        \"cupoMaximo\": 5,\n        \"estado\": 2\n    }\n]\n\n ```\n\n## [PATCH Update actividad estado - abrir](https://go.postman.co/workspace/1283b32f-ca24-48d7-bcc0-3404d4b0e143/documentation/32528594-df61d696-ce64-4903-907b-90bf3baf98b1?entity=request-0035fc12-b32c-4cf0-8a73-70763fd5607d)\n\nSolo después de que la actividad tenga estado 1 o 2.\n\n**Petición:** `http://localhost:3001/api/v1/actividades/1/cambiar_estado/0`\n\n**Respuesta:**\n\nCódigo: 200\n\n``` json\n{\n    \"id\": \"1\",\n    \"titulo\": \"Maratones de programación\",\n    \"fecha\": \"28-10-2024\",\n    \"cupoMaximo\": 5,\n    \"estado\": 0,\n    \"estudiantes\": [...]\n}\n\n ```\n\n## [PATCH Update actividad estado - cerrar](https://go.postman.co/workspace/1283b32f-ca24-48d7-bcc0-3404d4b0e143/documentation/32528594-df61d696-ce64-4903-907b-90bf3baf98b1?entity=request-685101c0-e4c2-4978-be24-67058af7b0aa)\n\nDespués de que la clase tenga un 80% de su capacidad máxima o más.\n\n**Petición:** `http://localhost:3001/api/v1/actividades/1/cambiar_estado/1`\n\n**Respuesta:**\n\nCódigo: 200\n\n``` json\n{\n    \"id\": \"1\",\n    \"titulo\": \"Maratones de programación\",\n    \"fecha\": \"28-10-2024\",\n    \"cupoMaximo\": 5,\n    \"estado\": 2,\n    \"estudiantes\": [...]\n}\n\n ```\n\n## [PATCH Update actividad estado - finalizar](https://go.postman.co/workspace/1283b32f-ca24-48d7-bcc0-3404d4b0e143/documentation/32528594-df61d696-ce64-4903-907b-90bf3baf98b1?entity=request-d2c47c0d-a7ca-47e4-9109-00ba6e4088a9)\n\nDespués de que la clase este llena.\n\n**Petición:** `http://localhost:3001/api/v1/actividades/1/cambiar_estado/2`\n\n**Respuesta:**\n\nCódigo: 200\n\n``` json\n{\n    \"id\": \"1\",\n    \"titulo\": \"Maratones de programación\",\n    \"fecha\": \"28-10-2024\",\n    \"cupoMaximo\": 5,\n    \"estado\": 2,\n    \"estudiantes\": [...]\n}\n\n ```",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32528594",
		"_collection_link": "https://p55555-8351.postman.co/workspace/1283b32f-ca24-48d7-bcc0-3404d4b0e143/collection/32528594-df61d696-ce64-4903-907b-90bf3baf98b1?action=share&source=collection_link&creator=32528594"
	},
	"item": [
		{
			"name": "valid",
			"item": [
				{
					"name": "Add actividad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.globals.set(\"ACTIVIDAD_ID\",data.id)",
									"pm.globals.set(\"ACTIVIDAD_FECHA\",data.fecha)",
									"",
									"pm.test(\"Response status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"titulo\": \"Maratones de programación\",\n    \"fecha\": \"28-10-2024\",\n    \"cupoMaximo\": 5,\n    \"estado\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/actividades",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"actividades"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Get actividades - fecha",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/actividades/by_fecha/{{ACTIVIDAD_FECHA}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"actividades",
								"by_fecha",
								"{{ACTIVIDAD_FECHA}}"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Update actividad estado - abrir",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PATCH request\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/actividades/{{ACTIVIDAD_ID}}/cambiar_estado/0",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"actividades",
								"{{ACTIVIDAD_ID}}",
								"cambiar_estado",
								"0"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Update actividad estado - cerrar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PATCH request\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/actividades/{{ACTIVIDAD_ID}}/cambiar_estado/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"actividades",
								"{{ACTIVIDAD_ID}}",
								"cambiar_estado",
								"1"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Update actividad estado - finalizar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PATCH request\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/actividades/{{ACTIVIDAD_ID}}/cambiar_estado/2",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"actividades",
								"{{ACTIVIDAD_ID}}",
								"cambiar_estado",
								"2"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "Invalid",
			"item": [
				{
					"name": "Add invalid actividad - titulo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"titulo\": \"Maratones\",\n    \"fecha\": \"28/10/2024\",\n    \"cupoMaximo\": 5,\n    \"estado\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/actividades",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"actividades"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Get actividades - fecha none",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/actividades/by_fecha/00-00-0000",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"actividades",
								"by_fecha",
								"00-00-0000"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Update invalid actividad estado - 80%",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unsuccessful PATCH request\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/actividades/{{ACTIVIDAD_ID}}/cambiar_estado/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"actividades",
								"{{ACTIVIDAD_ID}}",
								"cambiar_estado",
								"1"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				}
			],
			"description": "Invalid requests"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/",
			"type": "string"
		}
	]
}