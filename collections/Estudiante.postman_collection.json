{
	"info": {
		"_postman_id": "17f3f9d3-eb3f-4e23-b1a1-e9e3099e03e9",
		"name": "Estudiante",
		"description": "## [POST estudiante](https://go.postman.co/workspace/1283b32f-ca24-48d7-bcc0-3404d4b0e143/documentation/32528594-17f3f9d3-eb3f-4e23-b1a1-e9e3099e03e9?entity=request-2e48b187-ce16-4f8b-bdda-e7401bd79fab)\n\n**Petición:** `http://localhost:3001/api/v1/estudiantes`\n\n``` json\n{\n    \"cedula\": 1234567890,\n    \"nombre\": \"Carlos Peña\",\n    \"correo\": \"carlos@gmail.com\",\n    \"programa\": \"Ing. Sistemas\",\n    \"semestre\": 6\n}\n\n ```\n\n**Respuesta:**\n\nCódigo: 201\n\n``` json\n{\n    \"id\": \"1\",\n    \"cedula\": 1234567890,\n    \"nombre\": \"Carlos Peña\",\n    \"correo\": \"carlos@gmail.com\",\n    \"programa\": \"Ing. Sistemas\",\n    \"semestre\": 6\n}\n\n ```\n\n## [GET estudiante](https://go.postman.co/workspace/1283b32f-ca24-48d7-bcc0-3404d4b0e143/documentation/32528594-17f3f9d3-eb3f-4e23-b1a1-e9e3099e03e9?entity=request-cfa2ac64-56e7-4f8e-972c-e00f7b703fe2)\n\n**Petición:** `http://localhost:3001/api/v1/estudiantes/1`\n\n**Respuesta:**\n\nCódigo: 200\n\n``` json\n{\n    \"id\": \"1\",\n    \"cedula\": 1234567890,\n    \"nombre\": \"Carlos Peña\",\n    \"correo\": \"carlos@gmail.com\",\n    \"programa\": \"Ing. Sistemas\",\n    \"semestre\": 6\n}\n\n ```\n\n## [PATCH Update estudiante actividad](https://go.postman.co/workspace/1283b32f-ca24-48d7-bcc0-3404d4b0e143/documentation/32528594-17f3f9d3-eb3f-4e23-b1a1-e9e3099e03e9?entity=request-33177771-197a-40c8-bee7-c55ce320047b)\n\n**Petición:** `http://localhost:3001/api/v1/estudiantes/1/inscribir/1`\n\n**Respuesta:**\n\nCódigo: 200\n\n``` json\n{\n    \"id\": \"1\",\n    \"cedula\": 1234567890,\n    \"nombre\": \"Carlos Peña\",\n    \"correo\": \"carlos@gmail.com\",\n    \"programa\": \"Ing. Sistemas\",\n    \"semestre\": 6,\n    \"actividades\": [\n        {\n            \"id\": \"1\",\n            \"titulo\": \"Maratones de programación\",\n            \"fecha\": \"28-10-2024\",\n            \"cupoMaximo\": 5,\n            \"estado\": 0,\n            \"estudiantes\": []\n        }\n    ]\n}\n\n ```",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32528594",
		"_collection_link": "https://p55555-8351.postman.co/workspace/1283b32f-ca24-48d7-bcc0-3404d4b0e143/collection/32528594-17f3f9d3-eb3f-4e23-b1a1-e9e3099e03e9?action=share&source=collection_link&creator=32528594"
	},
	"item": [
		{
			"name": "valid",
			"item": [
				{
					"name": "Add estudiante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.globals.set(\"ESTUDIANTE_ID\",data.id)",
									"",
									"pm.test(\"Response status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cedula\": 1234567890,\n    \"nombre\": \"Carlos Peña\",\n    \"correo\": \"carlos@gmail.com\",\n    \"programa\": \"Ing. Sistemas\",\n    \"semestre\": 6\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/estudiantes",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"estudiantes"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Get estudiante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/estudiantes/{{ESTUDIANTE_ID}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"estudiantes",
								"{{ESTUDIANTE_ID}}"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Update estudiante actividad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PATCH request\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/estudiantes/{{ESTUDIANTE_ID}}/inscribir/{{ACTIVIDAD_ID}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"estudiantes",
								"{{ESTUDIANTE_ID}}",
								"inscribir",
								"{{ACTIVIDAD_ID}}"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "invalid",
			"item": [
				{
					"name": "Add invalid estudiante - mail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cedula\": 1234567890,\n    \"nombre\": \"Carlos Peña\",\n    \"correo\": \"carlosgmail.com\",\n    \"programa\": \"Ing. Sistemas\",\n    \"semestre\": 6\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/estudiantes",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"estudiantes"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Add invalid estudiante - semestre",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"",
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cedula\": 1234567890,\n    \"nombre\": \"Carlos Peña\",\n    \"correo\": \"carlos@gmail.com\",\n    \"programa\": \"Ing. Sistemas\",\n    \"semestre\": 11\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/estudiantes",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"estudiantes"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update invalid estudiante actividad - estado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Unsuccessful PATCH request\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/estudiantes/{{ESTUDIANTE_ID}}/inscribir/{{ACTIVIDAD_ID}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"estudiantes",
								"{{ESTUDIANTE_ID}}",
								"inscribir",
								"{{ACTIVIDAD_ID}}"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/",
			"type": "string"
		}
	]
}